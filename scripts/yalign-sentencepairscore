#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Trains the sentences classifier and saves it to a pickle.

Usage:
    yalign-sentencepairscore [options] test <dataset> <word_scores>
    yalign-sentencepairscore [options] <dataset> <word_scores> <outfile>

Options:
  -h --help        Show this screen.

Dataset must be a csv file with examples of aligned and not aligned sentences
Word scores must be a csv file with the word dictionary.

Test will run a 10-fold validation and printout the score
"""

import sys
from docopt import docopt
from yalign.svm import SVMClassifier
from yalign.wordpairscore import WordPairScore
from yalign.input_parsing import parse_training_file
from yalign.sentencepairscore import SentencePairScore, SentencePairScoreProblem


if __name__ == "__main__":
    args = docopt(__doc__)
    dataset_filepath = args["<dataset>"]
    word_scores_file = args["<word_scores>"]
    classifier = SentencePairScore()
    word_scores = WordPairScore(word_scores_file)
    training_data = parse_training_file(dataset_filepath)
    if args["test"]:
        from simpleai.machine_learning import kfold
        problem = SentencePairScoreProblem(word_scores)
        score = kfold(training_data, problem, SVMClassifier)
        message = "Classifier precision {:.3f}% (10-fold crossvalidation)"
        print >> sys.stderr, message.format(score * 100)
        exit(0)

    out_filepath = args["<outfile>"]

    print >> sys.stderr, "Starting training"
    classifier.train(training_data, word_scores)
    print >> sys.stderr, "Training done"

    print >> sys.stderr, "Saving into {}".format(out_filepath)
    classifier.save(out_filepath)
    print >> sys.stderr, "Saving done"
